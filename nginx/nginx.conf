{% set devpi = pillar.get('devpi', None) %}
{% set http = nginx.get('http', []) -%}

user www-data;
error_log /var/log/nginx/error.log;
pid /var/run/nginx.pid;

worker_processes 4;
events {
    worker_connections 100;
}

http {
    include /etc/nginx/mime.types;

    {% for config in http -%}
    {{ config }};
    {% endfor -%}

    {% for site, settings in sites.iteritems() -%}

    {% set domain = settings.get('domain') -%}
    {% set site_is_django = settings.get('django', None) -%}
    {% set site_is_php = settings.get('php', None) -%}

    {% if site_is_django %}

    {% set has_ftp = settings.get('ftp', False) -%}
    {% set locations = settings.get('locations', {}) -%}
    {% set ssl = settings.get('ssl', None) -%}
    {% set lan = settings.get('lan', None) -%}

    {% if not lan -%}
    server {
        listen 80;
        server_name www.{{ domain }};
        {% if ssl -%}
        return 301 https://{{ domain }}$request_uri;
        {% else -%}
        return 301 $scheme://{{ domain }}$request_uri;
        {% endif -%}
    }

    {% if ssl -%}
    server {
        listen 80;
        server_name {{ domain }};
        return 301 https:/$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name www.{{ domain }};
        ssl_certificate /srv/ssl/{{ site }}/ssl-unified.crt;
        ssl_certificate_key /srv/ssl/{{ site }}/server.key;
        return 301 $scheme://{{ domain }}$request_uri;
    }
    {% endif -%}
    {% endif -%}

    server {
        client_max_body_size 20m;
        {% if ssl -%}
        listen 443 ssl;
        {% else -%}
        listen 80;
        {% endif -%}

        {% if not lan -%}
        server_name {{ domain }};
        {% endif -%}

        {% if ssl -%}
        ssl_certificate /srv/ssl/{{ site }}/ssl-unified.crt;
        ssl_certificate_key /srv/ssl/{{ site }}/server.key;
        {% endif -%}

        {% for comment, location_settings in locations.iteritems() -%}
        location {{ location_settings['location'] }} {
            alias {{ location_settings.get('alias') }};
        }
        {% endfor -%}

        {% if has_ftp -%}
        location /fs {
            alias /home/web/repo/ftp/{{ site }}/site/static/;
        }
        {% endif -%}

        location /media {
            alias /home/web/repo/files/{{ site }}/public/;
        }

        location /private/ {
            internal;
            root /home/web/repo/files/{{ site }};
        }

        location /robots.txt {
            alias /home/web/repo/project/{{ site }}/live/web_static/robots.txt;
        }

        location ~ ^/favicon.(\w*)$ {
            alias /home/web/repo/project/{{ site }}/live/web_static/favicon.$1;
        }

        location /static {
            alias /home/web/repo/project/{{ site }}/live/web_static/;
        }

        location / {
            include          uwsgi_params;
            {% if ssl -%}
            uwsgi_param      UWSGI_SCHEME https;
            {% endif -%}
            uwsgi_pass       127.0.0.1:{{ settings['uwsgi_port'] }};
        }
    }
    {% endif -%}

    {# PHP sites #}
    {% if site_is_php %}
    server {
        # {{ site }}
        listen 80;
        server_name {{ domain }};
        root   /home/web/repo/project/{{ site }}/live;
        index index.php;

        # serve static files directly
        location ~* ^.+.(jpg|jpeg|gif|css|png|js|ico|html|xml|txt)$ {
            access_log        off;
            expires           max;
        }

        location ~ \.php$ {
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass unix:/var/run/php5-fpm/{{ site }}.socket;
            fastcgi_index index.php;
            include fastcgi_params;
        }
    }
    {% endif -%}

    {% endfor -%}

    {% for name, settings in nginx_services.iteritems() -%}
    server {
        listen {{ settings.get('port') }};
        server_name {{ name }};
        location {{ settings.get('location') }} {
            alias {{ settings.get('alias') }};
        }
    }
    {% endfor -%}

    {% if devpi %}
    {% set devpi_domain = devpi.get('domain') -%}
    {% set devpi_port = devpi.get('port') -%}
    server {
        client_max_body_size 5m;
        listen 80;
        server_name {{ devpi_domain }};
        location / {
            proxy_pass http://127.0.0.1:{{ devpi_port }};
            proxy_set_header  X-outside-url $scheme://$host;
            proxy_set_header  X-Real-IP $remote_addr;
        }
    }
    {% endif -%}

}
